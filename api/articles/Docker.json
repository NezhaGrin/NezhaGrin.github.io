{"title":"Docker","uid":"a48e6dda0c21e40880cba7e763278b04","slug":"Docker","date":"2024-02-22T08:03:32.000Z","updated":"2024-02-26T07:46:46.760Z","comments":true,"path":"api/articles/Docker.json","keywords":null,"cover":null,"content":"<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>💡 Tips：Docker 是一个开源的容器化平台，用于轻松打包、发布和运行应用程序。通过 Docker，开发者可以将应用程序及其依赖项打包到一个称为镜像的标准化单元中，然后在任何支持 Docker 的环境中部署这些镜像为容器。Docker 的核心原理是利用操作系统级虚拟化技术，如 Linux 容器 (LXC)，来创建轻量级、隔离的执行环境。这使得开发人员能够实现快速、一致和可靠的应用程序交付，并实现更高效的资源利用。</p></blockquote>\n<h3 id=\"三大核心\"><a href=\"#三大核心\" class=\"headerlink\" title=\"三大核心\"></a>三大核心</h3><ul>\n<li><strong>镜像（Image）</strong>：镜像是一个轻量级、独立、可执行的软件包，它包含了运行应用程序所需的所有内容，包括代码、运行时、库、环境变量和配置文件等。Docker 镜像是通过文件系统的层叠方式构建而成的，每一层都是只读的，它们共同组成了最终的镜像；</li>\n<li><strong>容器（Container）</strong>：容器是 Docker 镜像的运行实例。容器利用镜像提供的文件系统、代码和运行时环境，独立运行在宿主机上。每个容器都是相互隔离的，拥有自己的文件系统、网络和进程空间，但它们共享主机操作系统的内核；</li>\n<li><strong>仓库（Repository）</strong>：仓库是用来存放 Docker 镜像的地方。它可以被看作是一个集中的存储库，用于管理和分享镜像。仓库分为两种类型：公有仓库和私有仓库。Docker Hub 是最常见的公有仓库，而私有仓库则可以搭建在本地或者在云服务上，用于组织内部或个人使用；</li>\n</ul>\n<h3 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h3><table>\n<thead>\n<tr>\n<th>命令</th>\n<th>解释</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>systemctl start docker</td>\n<td>启动 docker</td>\n</tr>\n<tr>\n<td>systemctl restart docker</td>\n<td>重启 docker</td>\n</tr>\n<tr>\n<td>docker images</td>\n<td>查看所有镜像</td>\n</tr>\n<tr>\n<td>docker pull 镜像</td>\n<td>在 dockerhub 当中拉取镜像</td>\n</tr>\n<tr>\n<td>docker rmi 镜像</td>\n<td>删除镜像</td>\n</tr>\n<tr>\n<td>docker ps</td>\n<td>查看所有运行容器</td>\n</tr>\n<tr>\n<td>docker ps -a</td>\n<td>查看所有容器</td>\n</tr>\n<tr>\n<td>docker exec -it 容器 bash</td>\n<td>进入容器</td>\n</tr>\n<tr>\n<td>docker rm 容器</td>\n<td>删除容器，要先关闭容器才能删</td>\n</tr>\n<tr>\n<td>docker stop 容器</td>\n<td>停止容器</td>\n</tr>\n<tr>\n<td>docker start 容器</td>\n<td>启动容器</td>\n</tr>\n<tr>\n<td>docker restart 容器</td>\n<td>重启容器</td>\n</tr>\n<tr>\n<td>docker cp 宿主机目录 容器名称:&#x2F;容器里文件</td>\n<td>复制宿主机文件，到容器</td>\n</tr>\n<tr>\n<td>docker cp 容器名称:&#x2F;容器文件 宿主机目录</td>\n<td>复制容器文件，到宿主机</td>\n</tr>\n<tr>\n<td>docker -v 本地文件:&#x2F;容器文件</td>\n<td>映射文件，宿主机容器文件同步</td>\n</tr>\n<tr>\n<td>docker logs 容器</td>\n<td>查看容器日志</td>\n</tr>\n</tbody></table>\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><h4 id=\"ubuntu\"><a href=\"#ubuntu\" class=\"headerlink\" title=\"ubuntu\"></a>ubuntu</h4><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span><span class=\"string\">、若安装过先删除，若无忽略</span></span><br><span class=\"line\"><span class=\"string\">sudo</span> <span class=\"string\">apt-get</span> <span class=\"string\">remove</span> <span class=\"string\">docker</span> <span class=\"string\">docker-engine</span> <span class=\"string\">docker.io</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">2</span><span class=\"string\">、安装扩展</span></span><br><span class=\"line\"><span class=\"string\">sudo</span> <span class=\"string\">apt-get</span> <span class=\"string\">install</span> <span class=\"string\">apt-transport-https</span> <span class=\"string\">ca-certificates</span> <span class=\"string\">curl</span> <span class=\"string\">gnupg2</span> <span class=\"string\">software-properties-common</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">3</span><span class=\"string\">、信任</span> <span class=\"string\">GPG</span></span><br><span class=\"line\"><span class=\"string\">curl</span> <span class=\"string\">-fsSL</span> <span class=\"string\">https://mirrors.huaweicloud.com/docker-ce/linux/debian/gpg</span> <span class=\"string\">|</span> <span class=\"string\">sudo</span> <span class=\"string\">apt-key</span> <span class=\"string\">add</span> <span class=\"bullet\">-</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">4</span><span class=\"string\">、添加仓库</span></span><br><span class=\"line\"><span class=\"string\">sudo</span> <span class=\"string\">add-apt-repository</span> <span class=\"string\">&quot;deb [arch=amd64] https://mirrors.huaweicloud.com/docker-ce/linux/debian $(lsb_release -cs) stable&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">5</span><span class=\"string\">、安装</span></span><br><span class=\"line\"><span class=\"string\">apt</span> <span class=\"string\">install</span> <span class=\"string\">docker-ce</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">6</span><span class=\"string\">、以上还没安装好，那肯定要这样了</span></span><br><span class=\"line\"><span class=\"string\">wget</span> <span class=\"string\">https://mirrors.huaweicloud.com/docker-ce/linux/centos/7/x86_64/edge/Packages/containerd.io-1.2.6-3.3.el7.x86_64.rpm</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">apt</span> <span class=\"string\">install</span> <span class=\"string\">containerd.io-1.2.6-3.3.el7.x86_64.rpm</span></span><br><span class=\"line\"><span class=\"string\">apt</span> <span class=\"string\">install</span> <span class=\"string\">docker-ce</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"centos\"><a href=\"#centos\" class=\"headerlink\" title=\"centos\"></a>centos</h4><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span><span class=\"string\">、若安装过先删除，若无忽略</span></span><br><span class=\"line\"><span class=\"string\">sudo</span> <span class=\"string\">yum</span> <span class=\"string\">remove</span> <span class=\"string\">docker</span> <span class=\"string\">docker-common</span> <span class=\"string\">docker-selinux</span> <span class=\"string\">docker-engine</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">2</span><span class=\"string\">、安装扩展</span></span><br><span class=\"line\"><span class=\"string\">sudo</span> <span class=\"string\">yum</span> <span class=\"string\">install</span> <span class=\"string\">-y</span> <span class=\"string\">yum-utils</span> <span class=\"string\">device-mapper-persistent-data</span> <span class=\"string\">lvm2</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">3</span><span class=\"string\">、下载</span> <span class=\"string\">repo</span> <span class=\"string\">文件</span></span><br><span class=\"line\"><span class=\"string\">wget</span> <span class=\"string\">-O</span> <span class=\"string\">/etc/yum.repos.d/docker-ce.repo</span> <span class=\"string\">https://mirrors.huaweicloud.com/docker-ce/linux/centos/docker-ce.repo</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">4</span><span class=\"string\">、软件仓库地址替换为：</span></span><br><span class=\"line\"><span class=\"string\">sudo</span> <span class=\"string\">sed</span> <span class=\"string\">-i</span> <span class=\"string\">&#x27;s+download.docker.com+mirrors.huaweicloud.com/docker-ce+&#x27;</span> <span class=\"string\">/etc/yum.repos.d/docker-ce.repo</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">5</span><span class=\"string\">、更新索引文件并安装</span></span><br><span class=\"line\"><span class=\"string\">sudo</span> <span class=\"string\">yum</span> <span class=\"string\">makecache</span> <span class=\"string\">fast</span></span><br><span class=\"line\"><span class=\"string\">sudo</span> <span class=\"string\">yum</span> <span class=\"string\">install</span> <span class=\"string\">docker-ce</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">6</span><span class=\"string\">、以上还没安装好，那肯定要这样了</span></span><br><span class=\"line\"><span class=\"string\">wget</span> <span class=\"string\">https://mirrors.huaweicloud.com/docker-ce/linux/centos/7/x86_64/edge/Packages/containerd.io-1.2.6-3.3.el7.x86_64.rpm</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">yum</span> <span class=\"string\">install</span> <span class=\"string\">containerd.io-1.2.6-3.3.el7.x86_64.rpm</span></span><br><span class=\"line\"><span class=\"string\">yum</span> <span class=\"string\">install</span> <span class=\"string\">docker-ce</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"切换国内源\"><a href=\"#切换国内源\" class=\"headerlink\" title=\"切换国内源\"></a>切换国内源</h4><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span><span class=\"string\">、编辑配置文件</span></span><br><span class=\"line\"><span class=\"string\">vim</span> <span class=\"string\">/etc/docker/daemon.json</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">2</span><span class=\"string\">、添加中科大源</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">&quot;registry-mirrors&quot;:</span> [<span class=\"string\">&quot;https://docker.mirrors.ustc.edu.cn/&quot;</span>]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果 etc/docker 下不存在 daemon.json，新建一个即可</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">3</span><span class=\"string\">、重启</span> <span class=\"string\">docker</span></span><br><span class=\"line\"><span class=\"string\">systemctl</span> <span class=\"string\">restart</span> <span class=\"string\">docker</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"容器互联\"><a href=\"#容器互联\" class=\"headerlink\" title=\"容器互联\"></a>容器互联</h3><p>早期容器之间的互联都是使用 –link 连接，现在不在推荐使用。随着 Docker 网络的完善，强烈建议大家将容器加入自定义的 Docker 网络来连接多个容器，而不是使用 –link 参数。</p>\n<h4 id=\"查看网络\"><a href=\"#查看网络\" class=\"headerlink\" title=\"查看网络\"></a>查看网络</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker network <span class=\"built_in\">ls</span></span><br></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th>网络类型</th>\n<th>描述</th>\n<th>特点</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>bridge</td>\n<td>所有 Docker 安装中都存在的默认网络，表示为 docker0 网络。除非使用 <code>docker run --net=</code>选项另行指定，否则 Docker 守护进程默认会将容器连接到此网络。在主机上使用 <code>ifconfig</code>命令可以看到此网桥是主机的网络堆栈的一部分。</td>\n<td>- 提供了隔离性，每个容器拥有自己的网络命名空间。</td>\n</tr>\n</tbody></table>\n<ul>\n<li>容器之间可以相互通信，但默认情况下与主机之间是相互隔离的。</li>\n<li>Docker 容器之间可以使用容器名称进行通信。 |<br>| none | 在容器上添加了一个特定于容器的网络堆栈，该容器缺少网络接口。 | - 容器没有网络接口，因此无法与外部通信，除非手动配置网络。</li>\n<li>适用于一些特殊场景，例如需要完全隔离的容器或测试场景。 |<br>| host | 在主机网络堆栈上添加一个容器，容器中的网络配置与主机相同。 | - 容器与主机共享网络命名空间，因此容器可以直接访问主机的网络接口和端口。</li>\n<li>容器无需进行网络地址转换（NAT），因此网络性能较高。</li>\n<li>容器之间无法相互访问，除非在主机上进行端口映射。 |</li>\n</ul>\n<h4 id=\"创建网络\"><a href=\"#创建网络\" class=\"headerlink\" title=\"创建网络\"></a>创建网络</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker network create -d bridge 网络名称</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"PHP-开发套件\"><a href=\"#PHP-开发套件\" class=\"headerlink\" title=\"PHP 开发套件\"></a>PHP 开发套件</h3><h4 id=\"PHP\"><a href=\"#PHP\" class=\"headerlink\" title=\"PHP\"></a>PHP</h4><h5 id=\"拉取镜像\"><a href=\"#拉取镜像\" class=\"headerlink\" title=\"拉取镜像\"></a>拉取镜像</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker pull php:fpm</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"创建容器\"><a href=\"#创建容器\" class=\"headerlink\" title=\"创建容器\"></a>创建容器</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run --name php -p 9000:9000 --network name -v /宿主机存放代码的目录:/var/www/html -it -d php:fpm</span><br></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th>命令</th>\n<th>命令详解</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>run</td>\n<td>创建一个容器</td>\n</tr>\n<tr>\n<td>–name</td>\n<td>指定容器名称，为空 docker 自动分配名称</td>\n</tr>\n<tr>\n<td>-p</td>\n<td>端口映射，将容器的 9000 端口映射到主机的 9000 端口</td>\n</tr>\n<tr>\n<td>–network</td>\n<td>选择网络</td>\n</tr>\n<tr>\n<td>-v</td>\n<td>映射文件，宿主机容器文件同步</td>\n</tr>\n<tr>\n<td>-it</td>\n<td>表示让容器的标准输入打开,并且分配一个伪终端</td>\n</tr>\n<tr>\n<td>-d</td>\n<td>后台运行容器</td>\n</tr>\n</tbody></table>\n<h5 id=\"基本配置\"><a href=\"#基本配置\" class=\"headerlink\" title=\"基本配置\"></a>基本配置</h5><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 进入容器</span></span><br><span class=\"line\"><span class=\"string\">docker</span> <span class=\"string\">exec</span> <span class=\"string\">-it</span> <span class=\"string\">php</span> <span class=\"string\">bash</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 中科大源,然后下载需要的软件</span></span><br><span class=\"line\"><span class=\"string\">sed</span> <span class=\"string\">-i</span> <span class=\"string\">&#x27;s/deb.debian.org/mirrors.ustc.edu.cn/g&#x27;</span> <span class=\"string\">/etc/apt/sources.list</span></span><br><span class=\"line\"><span class=\"string\">apt</span> <span class=\"string\">update</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Composer 安装</span></span><br><span class=\"line\"><span class=\"number\">1</span><span class=\"string\">、curl</span> <span class=\"string\">-sS</span> <span class=\"string\">https://getcomposer.org/installer</span> <span class=\"string\">|</span> <span class=\"string\">php</span></span><br><span class=\"line\"><span class=\"number\">2</span><span class=\"string\">、mv</span> <span class=\"string\">composer.phar</span> <span class=\"string\">/usr/local/bin/composer</span></span><br><span class=\"line\"><span class=\"number\">3</span><span class=\"string\">、composer</span> <span class=\"string\">config</span> <span class=\"string\">-g</span> <span class=\"string\">repo.packagist</span> <span class=\"string\">composer</span> <span class=\"string\">https://mirrors.aliyun.com/composer/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 修改 /usr/local/etc/php-fpm.conf include 路径</span></span><br><span class=\"line\"><span class=\"string\">include=/usr/local/etc/php-fpm.d/*.conf</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 开启扩展命令</span></span><br><span class=\"line\"><span class=\"string\">/usr/local/bin/docker-php-ext-install</span> <span class=\"string\">mysqli</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 常见的一些扩展可以这样安装了，没有的就得自己下载安装了。下载扩展到 /usr/src/php/ext 目录当中,注意：如果没有 /usr/src/php/ext 别慌执行一下 /usr/local/bin/docker-php-ext-install 一个没有的扩展，然后文件夹就会有了，每次安装好扩展之后 php 自动删除！</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 关闭扩展命令</span></span><br><span class=\"line\"><span class=\"string\">docker-php-ext-enable</span> <span class=\"string\">mysqli</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># php.ini</span></span><br><span class=\"line\"><span class=\"string\">这个镜像给我们打包的配置文件，分开发和生产二个配置文件，在</span> <span class=\"string\">/usr/local/etc/php</span> <span class=\"string\">当中</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 重启容器</span></span><br><span class=\"line\"><span class=\"string\">docker</span> <span class=\"string\">restart</span> <span class=\"string\">php</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"MySQL\"><a href=\"#MySQL\" class=\"headerlink\" title=\"MySQL\"></a>MySQL</h4><p>如果是真实线上的项目，不推荐安装在容器当中，应当使用网络版本的 MySQL 本地开发无关紧要。</p>\n<h5 id=\"拉取镜像-1\"><a href=\"#拉取镜像-1\" class=\"headerlink\" title=\"拉取镜像\"></a>拉取镜像</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker pull mysql</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"创建容器-1\"><a href=\"#创建容器-1\" class=\"headerlink\" title=\"创建容器\"></a>创建容器</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -p 3306:3306 --name mysql --network name -v /xxx:/etc/mysql/conf.d -e MYSQL_ROOT_PASSWORD=root -d --privileged=<span class=\"literal\">true</span> mysql</span><br></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th>命令</th>\n<th>命令详解</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>run</td>\n<td>创建一个容器</td>\n</tr>\n<tr>\n<td>–name</td>\n<td>指定容器名称，为空 docker 自动分配名称</td>\n</tr>\n<tr>\n<td>-v</td>\n<td>映射文件，宿主机容器文件同步</td>\n</tr>\n<tr>\n<td>-p</td>\n<td>端口映射，将容器的 3306 端口映射到主机的 3306 端口</td>\n</tr>\n<tr>\n<td>-e</td>\n<td>设置环境变量，初始化 Mysql 密码</td>\n</tr>\n<tr>\n<td>-d</td>\n<td>后台运行容器</td>\n</tr>\n<tr>\n<td>–privileged&#x3D;true</td>\n<td>可能会碰到权限问题，需要加参数</td>\n</tr>\n</tbody></table>\n<h5 id=\"基本配置-1\"><a href=\"#基本配置-1\" class=\"headerlink\" title=\"基本配置\"></a>基本配置</h5><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 进入容器</span></span><br><span class=\"line\"><span class=\"string\">docker</span> <span class=\"string\">exec</span> <span class=\"string\">-it</span> <span class=\"string\">mysql</span> <span class=\"string\">bash</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 更换软件源，中科大源</span></span><br><span class=\"line\"><span class=\"string\">sed</span> <span class=\"string\">-i</span> <span class=\"string\">&#x27;s/deb.debian.org/mirrors.ustc.edu.cn/g&#x27;</span> <span class=\"string\">/etc/apt/sources.list</span></span><br><span class=\"line\"><span class=\"string\">apt</span> <span class=\"string\">update</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 修改密码认证 mysql 8 加密方式改变了</span></span><br><span class=\"line\"><span class=\"string\">mysql&gt;ALTER</span> <span class=\"string\">USER</span> <span class=\"string\">&#x27;root&#x27;</span><span class=\"string\">@&#x27;%&#x27;</span> <span class=\"string\">IDENTIFIED</span> <span class=\"string\">WITH</span> <span class=\"string\">mysql_native_password</span> <span class=\"string\">BY</span> <span class=\"string\">&#x27;root&#x27;</span><span class=\"string\">;</span></span><br><span class=\"line\"><span class=\"string\">mysql&gt;flush</span> <span class=\"string\">privileges;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果需要创建一个帐号，并且赋予权限，不需要忽略</span></span><br><span class=\"line\"><span class=\"string\">mysql&gt;create</span> <span class=\"string\">user</span> <span class=\"string\">&#x27;用户名&#x27;</span><span class=\"string\">@&#x27;访问主机&#x27;</span> <span class=\"string\">identified</span> <span class=\"string\">by</span> <span class=\"string\">&#x27;密码&#x27;</span><span class=\"string\">;</span></span><br><span class=\"line\"><span class=\"string\">mysql&gt;grant</span> <span class=\"string\">权限</span> <span class=\"string\">on</span> <span class=\"string\">*.*</span> <span class=\"string\">to</span> <span class=\"string\">&#x27;帐号&#x27;</span><span class=\"string\">@&#x27;%&#x27;</span> <span class=\"string\">WITH</span> <span class=\"string\">GRANT</span> <span class=\"string\">OPTION;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 修改 /etc/mysql/conf.d 下面的 mysql.cnf 添加以下配置，没有就创建 mysql.cnf</span></span><br><span class=\"line\">[<span class=\"string\">mysqld</span>]</span><br><span class=\"line\"><span class=\"string\">port=3306</span></span><br><span class=\"line\"><span class=\"string\">default_authentication_plugin=mysql_native_password</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 重启容器</span></span><br><span class=\"line\"><span class=\"string\">docker</span> <span class=\"string\">restart</span> <span class=\"string\">mysql</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Nginx\"><a href=\"#Nginx\" class=\"headerlink\" title=\"Nginx\"></a>Nginx</h4><h5 id=\"拉取镜像-2\"><a href=\"#拉取镜像-2\" class=\"headerlink\" title=\"拉取镜像\"></a>拉取镜像</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker pull nginx</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"创建容器-2\"><a href=\"#创建容器-2\" class=\"headerlink\" title=\"创建容器\"></a>创建容器</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run --name nginx -p 80:80 --network name -v /宿主机存放代码的目录:/usr/share/nginx/html -d nginx</span><br></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th>命令</th>\n<th>命令详解</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>run</td>\n<td>创建一个容器</td>\n</tr>\n<tr>\n<td>–name</td>\n<td>指定容器名称，为空 docker 自动分配名称</td>\n</tr>\n<tr>\n<td>-p</td>\n<td>端口映射，将容器的 80 端口映射到主机的 80 端口</td>\n</tr>\n<tr>\n<td>–network</td>\n<td>选择网络</td>\n</tr>\n<tr>\n<td>-v</td>\n<td>映射文件，宿主机容器文件同步</td>\n</tr>\n<tr>\n<td>-d</td>\n<td>后台运行容器</td>\n</tr>\n</tbody></table>\n<h5 id=\"基本配置-2\"><a href=\"#基本配置-2\" class=\"headerlink\" title=\"基本配置\"></a>基本配置</h5><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 中科大源,然后下载需要的软件</span></span><br><span class=\"line\"><span class=\"string\">sed</span> <span class=\"string\">-i</span> <span class=\"string\">&#x27;s/deb.debian.org/mirrors.ustc.edu.cn/g&#x27;</span> <span class=\"string\">/etc/apt/sources.list</span></span><br><span class=\"line\"><span class=\"string\">apt</span> <span class=\"string\">update</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 贴上我的配置，Nginx 配置文件所在目录 /etc/nginx</span></span><br><span class=\"line\"><span class=\"string\">server</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\"># 监听端口</span></span><br><span class=\"line\">    <span class=\"string\">listen</span>       <span class=\"number\">80</span><span class=\"string\">;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 域名</span></span><br><span class=\"line\">    <span class=\"string\">server_name</span>  <span class=\"string\">dev.test;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 程序目录</span></span><br><span class=\"line\">    <span class=\"string\">root</span>   <span class=\"string\">/usr/share/nginx/html/dao/public;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 默认访问</span></span><br><span class=\"line\">    <span class=\"string\">index</span>  <span class=\"string\">index.php;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 字符集编码</span></span><br><span class=\"line\">    <span class=\"string\">charset</span> <span class=\"string\">utf-8;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 错误日志</span></span><br><span class=\"line\">    <span class=\"string\">access_log</span>  <span class=\"string\">/var/log/nginx/app.access.log</span>  <span class=\"string\">main;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 默认请求 正则匹配</span></span><br><span class=\"line\">    <span class=\"string\">location</span> <span class=\"string\">/</span> &#123;</span><br><span class=\"line\">        <span class=\"string\">try_files</span> <span class=\"string\">$uri</span> <span class=\"string\">$uri/</span> <span class=\"string\">/index.php?$query_string;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 正则匹配到 PHP 文件请求 ，扔给 FastCGI </span></span><br><span class=\"line\">    <span class=\"string\">location</span> <span class=\"string\">~</span> <span class=\"string\">\\.php$</span> &#123;</span><br><span class=\"line\">        <span class=\"string\">root</span>           <span class=\"string\">/var/www/html/dao/public;</span></span><br><span class=\"line\">        <span class=\"string\">fastcgi_pass</span>   <span class=\"string\">php-fpm:9000;</span></span><br><span class=\"line\">        <span class=\"string\">fastcgi_index</span>  <span class=\"string\">index.php;</span></span><br><span class=\"line\">        <span class=\"string\">include</span>        <span class=\"string\">fastcgi_params;</span></span><br><span class=\"line\">        <span class=\"string\">fastcgi_param</span>  <span class=\"string\">SCRIPT_FILENAME</span> <span class=\"string\">$document_root$fastcgi_script_name;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 重启 nginx</span></span><br><span class=\"line\"><span class=\"string\">docker</span> <span class=\"string\">restart</span> <span class=\"string\">nginx</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Redis\"><a href=\"#Redis\" class=\"headerlink\" title=\"Redis\"></a>Redis</h4><p>如果是真实线上的项目，不推荐安装在容器当中，应当使用网络版本的 redis 本地开发无关紧要。</p>\n<h5 id=\"拉取镜像-3\"><a href=\"#拉取镜像-3\" class=\"headerlink\" title=\"拉取镜像\"></a>拉取镜像</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker pull redis</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"创建容器-3\"><a href=\"#创建容器-3\" class=\"headerlink\" title=\"创建容器\"></a>创建容器</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run --name redis -p 6379:6379 --network name -d redis redis-server --appendonly <span class=\"built_in\">yes</span> --requirepass <span class=\"string\">&quot;mypassword&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Memcached\"><a href=\"#Memcached\" class=\"headerlink\" title=\"Memcached\"></a>Memcached</h4><p>如果是真实线上的项目，不推荐安装在容器当中，应当使用网络版本的 memcached 本地开发无关紧要。</p>\n<h5 id=\"拉取镜像-4\"><a href=\"#拉取镜像-4\" class=\"headerlink\" title=\"拉取镜像\"></a>拉取镜像</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker pull memcached</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"创建容器-4\"><a href=\"#创建容器-4\" class=\"headerlink\" title=\"创建容器\"></a>创建容器</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run --name memcached -p 11211:11211 -m 64m -d memcached</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Dockerfile\"><a href=\"#Dockerfile\" class=\"headerlink\" title=\"Dockerfile\"></a>Dockerfile</h3><p>Dockerfile 是一个文本文件，包含了一系列用于构建 Docker 镜像的指令和配置。通过 Dockerfile，开发者可以定义镜像中的环境、依赖项、运行时配置等内容，以及如何构建和配置容器。简单点来说就是创建自定义镜像，Dockerfile 一般搭配着项目的 CI&#x2F;CD 一起出现。</p>\n<h4 id=\"常用命令-1\"><a href=\"#常用命令-1\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h4><table>\n<thead>\n<tr>\n<th>命令</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><strong>FROM</strong></td>\n<td>指定基础镜像</td>\n</tr>\n<tr>\n<td>MAINTAINER</td>\n<td>指定镜像维护者的信息</td>\n</tr>\n<tr>\n<td><strong>RUN</strong></td>\n<td>在镜像中执行命令</td>\n</tr>\n<tr>\n<td><strong>CMD</strong></td>\n<td>容器启动后默认执行的命令</td>\n</tr>\n<tr>\n<td>ENTRYPOINT</td>\n<td>容器启动时执行的命令</td>\n</tr>\n<tr>\n<td><strong>COPY</strong></td>\n<td>将文件复制到镜像中</td>\n</tr>\n<tr>\n<td><strong>ADD</strong></td>\n<td>类似于 COPY，但功能更强大，可以自动解压缩文件和 URL</td>\n</tr>\n<tr>\n<td><strong>WORKDIR</strong></td>\n<td>设置工作目录</td>\n</tr>\n<tr>\n<td><strong>ENV</strong></td>\n<td>设置环境变量</td>\n</tr>\n<tr>\n<td><strong>EXPOSE</strong></td>\n<td>声明容器运行时需要暴露的端口</td>\n</tr>\n<tr>\n<td>VOLUME</td>\n<td>创建一个挂载点，用于持久化数据</td>\n</tr>\n<tr>\n<td>USER</td>\n<td>指定容器运行时的用户名或 UID</td>\n</tr>\n<tr>\n<td>ARG</td>\n<td>定义构建时的参数</td>\n</tr>\n<tr>\n<td>ONBUILD</td>\n<td>定义触发器指令，会在后续构建过程中被触发执行</td>\n</tr>\n</tbody></table>\n<h3 id=\"Qt-成品-Dockerfile\"><a href=\"#Qt-成品-Dockerfile\" class=\"headerlink\" title=\"Qt 成品 Dockerfile\"></a>Qt 成品 Dockerfile</h3><h4 id=\"x86-交叉-FTD2000（ARM64）\"><a href=\"#x86-交叉-FTD2000（ARM64）\" class=\"headerlink\" title=\"x86 交叉 FTD2000（ARM64）\"></a>x86 交叉 FTD2000（ARM64）</h4><figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">FROM</span> ubuntu:<span class=\"number\">16.04</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">ENV</span> DEBIAN_FRONTEND noninteractive</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> sed -i <span class=\"string\">&#x27;1 i deb http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse&#x27;</span> /etc/apt/sources.list &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    sed -i <span class=\"string\">&#x27;2 i deb-src http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse&#x27;</span> /etc/apt/sources.list &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    sed -i <span class=\"string\">&#x27;3 i deb http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse&#x27;</span> /etc/apt/sources.list &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    sed -i <span class=\"string\">&#x27;4 i deb-src http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse&#x27;</span> /etc/apt/sources.list &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    sed -i <span class=\"string\">&#x27;5 i deb http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse&#x27;</span> /etc/apt/sources.list &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    sed -i <span class=\"string\">&#x27;6 i deb-src http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse&#x27;</span> /etc/apt/sources.list &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    sed -i <span class=\"string\">&#x27;7 i deb http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse&#x27;</span> /etc/apt/sources.list &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    sed -i <span class=\"string\">&#x27;8 i deb-src http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse&#x27;</span> /etc/apt/sources.list</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> apt update &amp;&amp; apt install -y build-essential wget curl cmake python gperf bison flex pkg-config</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">WORKDIR</span><span class=\"language-bash\"> /opt</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> apt install -y xz-utils &amp;&amp; wget -q 工具链：gcc-linaro-7.3.1-2018.05-x86_64_aarch64-linux-gnu.tar.xz &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    xz -d gcc-linaro-7.3.1-2018.05-x86_64_aarch64-linux-gnu.tar.xz &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    tar -xf gcc-linaro-7.3.1-2018.05-x86_64_aarch64-linux-gnu.tar &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    <span class=\"built_in\">mv</span> gcc-linaro-7.3.1-2018.05-x86_64_aarch64-linux-gnu ./aarch64-linux-gnu &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    <span class=\"built_in\">rm</span> -rf gcc-linaro-7.3.1-2018.05-x86_64_aarch64-linux-gnu.tar</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">ENV</span> PATH=$PATH:/opt/aarch64-linux-gnu/bin</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> wget -q 地址：llvm-7.0.1.tar.gz &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    tar -xf llvm-7.0.1.tar.gz &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    <span class=\"built_in\">rm</span> -rf llvm-7.0.1.tar.gz</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> wget -q https://download.qt.io/archive/qt/5.12/5.12.12/single/qt-everywhere-src-5.12.12.tar.xz &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    xz -d qt-everywhere-src-5.12.12.tar.xz &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    tar -xf qt-everywhere-src-5.12.12.tar &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    <span class=\"built_in\">rm</span> -rf qt-everywhere-src-5.12.12.tar &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    <span class=\"built_in\">cd</span> qt-everywhere-src-5.12.12 &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    <span class=\"built_in\">mkdir</span> build</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">WORKDIR</span><span class=\"language-bash\"> /sysroot</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> wget -q 打包好的 sysroot：/FTD2000.tar.gz &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    tar -zxf FTD2000.tar.gz &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    <span class=\"built_in\">rm</span> -rf FTD2000.tar.gz</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> <span class=\"built_in\">cd</span> /opt/llvm-7.0.1/llvm &amp;&amp; <span class=\"built_in\">mkdir</span> build &amp;&amp; <span class=\"built_in\">cd</span> build &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    sed -e <span class=\"string\">&#x27;1163 s|^|//|&#x27;</span> -i /opt/llvm-7.0.1/llvm/projects/compiler-rt/lib/sanitizer_common/sanitizer_platform_limits_posix.cc &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    cmake -G <span class=\"string\">&quot;Unix Makefiles&quot;</span> -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/opt/x86-llvm -DLLVM_TABLEGEN=/opt/llvm-7.0.1/llvm/build/bin/llvm-tblgen -DCLANG_TABLEGEN=/opt/llvm-7.0.1/llvm/build/bin/clang-tblgen -DLLVM_INCLUDE_TESTS=OFF -DCLANG_INCLUDE_TESTS=OFF .. &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    make -j32 &amp;&amp; make -j32 install &amp;&amp; <span class=\"built_in\">cp</span> /opt/llvm-7.0.1/llvm/build/bin/clang-tblgen /opt/x86-llvm/bin</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> <span class=\"built_in\">cd</span> /opt/llvm-7.0.1/llvm &amp;&amp; <span class=\"built_in\">rm</span> -rf build &amp;&amp; <span class=\"built_in\">mkdir</span> build &amp;&amp; <span class=\"built_in\">cd</span> build &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    CC=aarch64-linux-gnu-gcc CXX=aarch64-linux-gnu-g++ cmake -G <span class=\"string\">&quot;Unix Makefiles&quot;</span> --enable-targets=aarch64 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/opt/arm-llvm -DLLVM_TABLEGEN=/opt/x86-llvm/bin/llvm-tblgen -DCLANG_TABLEGEN=/opt/x86-llvm/bin/clang-tblgen -DLLVM_INCLUDE_TESTS=OFF -DCLANG_INCLUDE_TESTS=OFF -DCMAKE_SYSROOT=/sysroot .. &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    make -j32 &amp;&amp; make -j32 install </span></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> <span class=\"built_in\">cp</span> /sysroot/usr/lib/libstdc++.so.6.0.22 /opt/arm-llvm/lib &amp;&amp; <span class=\"built_in\">cd</span> /opt/arm-llvm/lib &amp;&amp; <span class=\"built_in\">ln</span> -s libstdc++.so.6.0.22 libstdc++.so.6 </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> <span class=\"built_in\">cd</span> /opt &amp;&amp; tar -zcf llvm.tar.gz arm-llvm &amp;&amp; <span class=\"built_in\">rm</span> -rf /opt/arm-llvm/bin &amp;&amp; <span class=\"built_in\">cp</span> -r /opt/x86-llvm/bin /opt/arm-llvm &amp;&amp; <span class=\"built_in\">rm</span> -rf /opt/llvm-7.0.1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">ENV</span> LLVM_INSTALL_DIR=/opt/x86-llvm</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> <span class=\"built_in\">cd</span> /opt/qt-everywhere-src-5.12.12/build &amp;&amp; /opt/qt-everywhere-src-5.12.12/configure -prefix /qt5.12.12 \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    -opensource \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    -confirm-license \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    -release \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    -xplatform linux-aarch64-gnu-g++ \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    -make libs \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    -make tools \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    -nomake tests \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    -nomake examples \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    -qt-zlib \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    -sysroot /sysroot &amp;&amp; make -j64 &amp;&amp; make -j64 install</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> <span class=\"built_in\">rm</span> -rf /opt/qt-everywhere-src-5.12.12</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">ENV</span> LLVM_INSTALL_DIR=/opt/arm-llvm</span><br><span class=\"line\"><span class=\"keyword\">ENV</span> QTC_ENABLE_CLANG_LIBTOOLING=true</span><br><span class=\"line\"><span class=\"keyword\">ENV</span> PATH=$PATH:/sysroot/qt5.<span class=\"number\">12.12</span>/bin</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"x86-交叉-龙芯3A4000（mips64）\"><a href=\"#x86-交叉-龙芯3A4000（mips64）\" class=\"headerlink\" title=\"x86 交叉 龙芯3A4000（mips64）\"></a>x86 交叉 龙芯3A4000（mips64）</h4><figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">FROM</span> ubuntu:<span class=\"number\">18.04</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">ENV</span> DEBIAN_FRONTEND noninteractive</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> apt update &amp;&amp; apt install -y build-essential wget curl cmake python gperf bison flex pkg-config gcc-8-mips64el-linux-gnuabi64 g++-8-mips64el-linux-gnuabi64</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> <span class=\"built_in\">rm</span> -rf /usr/mips64el-linux-gnuabi64/lib &amp;&amp; <span class=\"built_in\">rm</span> -rf /usr/mips64el-linux-gnuabi64/lib64</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">WORKDIR</span><span class=\"language-bash\"> /opt</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> wget -q 地址：llvm-7.0.1.tar.gz &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    tar -xf llvm-7.0.1.tar.gz &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    <span class=\"built_in\">rm</span> -rf llvm-7.0.1.tar.gz</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> wget -q https://download.qt.io/archive/qt/5.12/5.12.12/single/qt-everywhere-src-5.12.12.tar.xz &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    xz -d qt-everywhere-src-5.12.12.tar.xz &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    tar -xf qt-everywhere-src-5.12.12.tar &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    <span class=\"built_in\">rm</span> -rf qt-everywhere-src-5.12.12.tar &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    <span class=\"built_in\">cd</span> qt-everywhere-src-5.12.12 &amp;&amp; <span class=\"built_in\">mkdir</span> build</span></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"keyword\">WORKDIR</span><span class=\"language-bash\"> /sysroot</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> wget -q 打包好的 sysroot：jari-works-3a4000-system-usr.tar &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    tar -xf jari-works-3a4000-system-usr.tar &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    <span class=\"built_in\">rm</span> -rf jari-works-3a4000-system-usr.tar</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> wget -q 打包好的 sysroot：jari-works-3a4000-system-lib.tar.tar.gz &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    tar -zxf jari-works-3a4000-system-lib.tar.tar.gz &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    <span class=\"built_in\">rm</span> -rf jari-works-3a4000-system-lib.tar.tar.gz</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> <span class=\"built_in\">cd</span> /opt/llvm-7.0.1/llvm &amp;&amp; <span class=\"built_in\">mkdir</span> build &amp;&amp; <span class=\"built_in\">cd</span> build &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    cmake -G <span class=\"string\">&quot;Unix Makefiles&quot;</span> -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/opt/x86-llvm -DLLVM_TABLEGEN=/opt/llvm-7.0.1/llvm/build/bin/llvm-tblgen -DCLANG_TABLEGEN=/opt/llvm-7.0.1/llvm/build/bin/clang-tblgen -DLLVM_INCLUDE_TESTS=OFF -DCLANG_INCLUDE_TESTS=OFF .. &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    make -j32 &amp;&amp; make -j32 install &amp;&amp; <span class=\"built_in\">cp</span> /opt/llvm-7.0.1/llvm/build/bin/clang-tblgen /opt/x86-llvm/bin</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> <span class=\"built_in\">rm</span> -rf /sysroot/usr/bin &amp;&amp; <span class=\"built_in\">cd</span> /opt/llvm-7.0.1/llvm &amp;&amp; <span class=\"built_in\">rm</span> -rf build &amp;&amp; <span class=\"built_in\">mkdir</span> build &amp;&amp; <span class=\"built_in\">cd</span> build &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    CC=mips64el-linux-gnuabi64-gcc-8 CXX=mips64el-linux-gnuabi64-g++-8 cmake -G <span class=\"string\">&quot;Unix Makefiles&quot;</span> --enable-targets=mips -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/opt/mips-llvm -DLLVM_TABLEGEN=/opt/x86-llvm/bin/llvm-tblgen -DCLANG_TABLEGEN=/opt/x86-llvm/bin/clang-tblgen -DLLVM_INCLUDE_TESTS=OFF -DCLANG_INCLUDE_TESTS=OFF -DCMAKE_SYSROOT=/sysroot .. &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    make -j32 &amp;&amp; make -j32 install</span></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> <span class=\"built_in\">cd</span> /opt &amp;&amp; tar -zcf llvm.tar.gz mips-llvm &amp;&amp; <span class=\"built_in\">rm</span> -rf /opt/mips-llvm/bin &amp;&amp; <span class=\"built_in\">cp</span> -r /opt/x86-llvm/bin /opt/mips-llvm &amp;&amp; <span class=\"built_in\">rm</span> -rf /opt/llvm-7.0.1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">ENV</span> LLVM_INSTALL_DIR=/opt/x86-llvm</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> <span class=\"built_in\">cd</span> /opt/qt-everywhere-src-5.12.12/build &amp;&amp; <span class=\"built_in\">cp</span> -r /opt/qt-everywhere-src-5.12.12/qtbase/mkspecs/linux-aarch64-gnu-g++ /opt/qt-everywhere-src-5.12.12/qtbase/mkspecs/linux-mips64el-gnu-g++ &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    sed -i <span class=\"string\">&#x27;14c QMAKE_CC          = mips64el-linux-gnuabi64-gcc-8&#x27;</span> ../qtbase/mkspecs/linux-mips64el-gnu-g++/qmake.conf &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    sed -i <span class=\"string\">&#x27;15c QMAKE_CXX         = mips64el-linux-gnuabi64-g++-8&#x27;</span> ../qtbase/mkspecs/linux-mips64el-gnu-g++/qmake.conf &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    sed -i <span class=\"string\">&#x27;16c QMAKE_LINK        = mips64el-linux-gnuabi64-g++-8&#x27;</span> ../qtbase/mkspecs/linux-mips64el-gnu-g++/qmake.conf &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    sed -i <span class=\"string\">&#x27;17c QMAKE_LINK_SHLIB  = mips64el-linux-gnuabi64-g++-8&#x27;</span> ../qtbase/mkspecs/linux-mips64el-gnu-g++/qmake.conf &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    sed -i <span class=\"string\">&#x27;20c QMAKE_AR          = mips64el-linux-gnuabi64-ar cqs&#x27;</span> ../qtbase/mkspecs/linux-mips64el-gnu-g++/qmake.conf &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    sed -i <span class=\"string\">&#x27;21c QMAKE_OBJCOPY     = mips64el-linux-gnuabi64-objcopy&#x27;</span> ../qtbase/mkspecs/linux-mips64el-gnu-g++/qmake.conf &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    sed -i <span class=\"string\">&#x27;22c QMAKE_NM          = mips64el-linux-gnuabi64-nm -P&#x27;</span> ../qtbase/mkspecs/linux-mips64el-gnu-g++/qmake.conf &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    sed -i <span class=\"string\">&#x27;23c QMAKE_STRIP       = mips64el-linux-gnuabi64-strip&#x27;</span> ../qtbase/mkspecs/linux-mips64el-gnu-g++/qmake.conf &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    /opt/qt-everywhere-src-5.12.12/configure -prefix /qt5.12.12 \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    -opensource \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    -confirm-license \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    -release \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    -xplatform linux-mips64el-gnu-g++ \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    -make libs \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    -make tools \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    -nomake tests \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    -nomake examples \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    -qt-zlib \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    -sysroot /sysroot &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    make -j64 &amp;&amp; make -j32 install</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> <span class=\"built_in\">rm</span> -rf /opt/qt-everywhere-src-5.12.12</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">ENV</span> LLVM_INSTALL_DIR=/opt/mips-llvm</span><br><span class=\"line\"><span class=\"keyword\">ENV</span> QTC_ENABLE_CLANG_LIBTOOLING=true</span><br><span class=\"line\"><span class=\"keyword\">ENV</span> PATH=$PATH:/sysroot/qt5.<span class=\"number\">12.12</span>/bin</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"x86-交叉-龙芯3A5000（LoongArch64）\"><a href=\"#x86-交叉-龙芯3A5000（LoongArch64）\" class=\"headerlink\" title=\"x86 交叉 龙芯3A5000（LoongArch64）\"></a>x86 交叉 龙芯3A5000（LoongArch64）</h4><figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">FROM</span> ubuntu:<span class=\"number\">18.04</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">ENV</span> DEBIAN_FRONTEND noninteractive</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> sed -i <span class=\"string\">&#x27;1 i deb http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse&#x27;</span> /etc/apt/sources.list &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    sed -i <span class=\"string\">&#x27;2 i deb-src http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse&#x27;</span> /etc/apt/sources.list &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    sed -i <span class=\"string\">&#x27;3 i deb http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse&#x27;</span> /etc/apt/sources.list &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    sed -i <span class=\"string\">&#x27;4 i deb-src http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse&#x27;</span> /etc/apt/sources.list &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    sed -i <span class=\"string\">&#x27;5 i deb http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse&#x27;</span> /etc/apt/sources.list &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    sed -i <span class=\"string\">&#x27;6 i deb-src http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse&#x27;</span> /etc/apt/sources.list &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    sed -i <span class=\"string\">&#x27;7 i deb http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse&#x27;</span> /etc/apt/sources.list &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    sed -i <span class=\"string\">&#x27;8 i deb-src http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse&#x27;</span> /etc/apt/sources.list</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> apt update &amp;&amp; apt install -y build-essential wget curl cmake python gperf bison flex pkg-config</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">WORKDIR</span><span class=\"language-bash\"> /opt</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> wget -q 地址：llvm-7.0.1.tar.gz &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    tar -xf llvm-7.0.1.tar.gz &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    <span class=\"built_in\">rm</span> -rf llvm-7.0.1.tar.gz</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> wget http://ftp.loongnix.cn/toolchain/gcc/release/loongarch/gcc8/toolchain-loongarch64-linux-gnu-cross-830-rc1.0-2022-04-22.tar.xz &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    tar -xf toolchain-loongarch64-linux-gnu-cross-830-rc1.0-2022-04-22.tar.xz &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    <span class=\"built_in\">rm</span> -rf toolchain-loongarch64-linux-gnu-cross-830-rc1.0-2022-04-22.tar.xz &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    <span class=\"built_in\">mv</span> toolchain-loongarch64-linux-gnu-cross-830-rc1.0-2022-04-22 loongaarch</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">ENV</span> PATH=$PATH:/opt/loongaarch/bin</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> wget https://download.qt.io/archive/qt/5.12/5.12.12/single/qt-everywhere-src-5.12.12.tar.xz &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    xz -d qt-everywhere-src-5.12.12.tar.xz &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    tar -xf qt-everywhere-src-5.12.12.tar &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    <span class=\"built_in\">rm</span> -rf qt-everywhere-src-5.12.12.tar &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    sed -i <span class=\"string\">&#x27;493c u.asBits.payload = reinterpret_cast&lt;int64_t&gt;(ptr);&#x27;</span> /opt/qt-everywhere-src-5.12.12/qtscript/src/3rdparty/javascriptcore/JavaScriptCore/runtime/JSValue.h &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    sed -i <span class=\"string\">&#x27;505c u.asBits.payload = reinterpret_cast&lt;int64_t&gt;(const_cast&lt;JSCell*&gt;(ptr));&#x27;</span> /opt/qt-everywhere-src-5.12.12/qtscript/src/3rdparty/javascriptcore/JavaScriptCore/runtime/JSValue.h &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    <span class=\"built_in\">cd</span> qt-everywhere-src-5.12.12 &amp;&amp; <span class=\"built_in\">mkdir</span> build</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">WORKDIR</span><span class=\"language-bash\"> /sysroot</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> wget 打包好的 sysroot：loongson-3A5000.tar.gz &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    tar -zxf loongson-3A5000.tar.gz &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    <span class=\"built_in\">rm</span> -rf loongson-3A5000.tar.gz</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> <span class=\"built_in\">cd</span> /opt/llvm-7.0.1/llvm &amp;&amp; <span class=\"built_in\">mkdir</span> build &amp;&amp; <span class=\"built_in\">cd</span> build &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    sed -e <span class=\"string\">&#x27;1163 s|^|//|&#x27;</span> -i /opt/llvm-7.0.1/llvm/projects/compiler-rt/lib/sanitizer_common/sanitizer_platform_limits_posix.cc &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    cmake -G <span class=\"string\">&quot;Unix Makefiles&quot;</span> -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/opt/x86-llvm -DLLVM_TABLEGEN=/opt/llvm-7.0.1/llvm/build/bin/llvm-tblgen -DCLANG_TABLEGEN=/opt/llvm-7.0.1/llvm/build/bin/clang-tblgen -DLLVM_INCLUDE_TESTS=OFF -DCLANG_INCLUDE_TESTS=OFF .. &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    make -j32 &amp;&amp; make -j32 install &amp;&amp; <span class=\"built_in\">cp</span> /opt/llvm-7.0.1/llvm/build/bin/clang-tblgen /opt/x86-llvm/bin</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> <span class=\"built_in\">cd</span> /opt/llvm-7.0.1/llvm &amp;&amp; <span class=\"built_in\">rm</span> -rf build &amp;&amp; <span class=\"built_in\">mkdir</span> build &amp;&amp; <span class=\"built_in\">cd</span> build &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    CC=loongarch64-linux-gnu-gcc CXX=loongarch64-linux-gnu-g++ cmake -G <span class=\"string\">&quot;Unix Makefiles&quot;</span> --enable-targets=loongaarch64 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/opt/loongaarch64-llvm -DLLVM_TABLEGEN=/opt/x86-llvm/bin/llvm-tblgen -DCLANG_TABLEGEN=/opt/x86-llvm/bin/clang-tblgen -DLLVM_INCLUDE_TESTS=OFF -DCLANG_INCLUDE_TESTS=OFF -DCMAKE_SYSROOT=/sysroot .. &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    make -j32 &amp;&amp; make -j32 install</span></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> <span class=\"built_in\">cd</span> /opt &amp;&amp; tar -zcf loongaarch64.tar.gz loongaarch64-llvm &amp;&amp; <span class=\"built_in\">rm</span> -rf /opt/loongaarch64-llvm/bin &amp;&amp; <span class=\"built_in\">cp</span> -r /opt/x86-llvm/bin /opt/loongaarch64-llvm &amp;&amp; <span class=\"built_in\">rm</span> -rf /opt/llvm-7.0.1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">ENV</span> LLVM_INSTALL_DIR=/opt/x86-llvm</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> <span class=\"built_in\">cd</span> /opt/qt-everywhere-src-5.12.12/build &amp;&amp; <span class=\"built_in\">cp</span> -r /opt/qt-everywhere-src-5.12.12/qtbase/mkspecs/linux-aarch64-gnu-g++ /opt/qt-everywhere-src-5.12.12/qtbase/mkspecs/linux-loongarch64-gnu-g++ &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    sed -i <span class=\"string\">&#x27;89c defined(__mips__) || defined(__loongarch__) || \\\\&#x27;</span> /opt/qt-everywhere-src-5.12.12/qtbase/src/3rdparty/double-conversion/include/double-conversion/utils.h &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    sed -i <span class=\"string\">&#x27;14c QMAKE_CC          = loongarch64-linux-gnu-gcc&#x27;</span> /opt/qt-everywhere-src-5.12.12/qtbase/mkspecs/linux-loongarch64-gnu-g++/qmake.conf &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    sed -i <span class=\"string\">&#x27;15c QMAKE_CXX         = loongarch64-linux-gnu-g++&#x27;</span> /opt/qt-everywhere-src-5.12.12/qtbase/mkspecs/linux-loongarch64-gnu-g++/qmake.conf &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    sed -i <span class=\"string\">&#x27;16c QMAKE_LINK        = loongarch64-linux-gnu-g++&#x27;</span> /opt/qt-everywhere-src-5.12.12/qtbase/mkspecs/linux-loongarch64-gnu-g++/qmake.conf &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    sed -i <span class=\"string\">&#x27;17c QMAKE_LINK_SHLIB  = loongarch64-linux-gnu-g++&#x27;</span> /opt/qt-everywhere-src-5.12.12/qtbase/mkspecs/linux-loongarch64-gnu-g++/qmake.conf &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    sed -i <span class=\"string\">&#x27;20c QMAKE_AR          = loongarch64-linux-gnu-ar cqs&#x27;</span> /opt/qt-everywhere-src-5.12.12/qtbase/mkspecs/linux-loongarch64-gnu-g++/qmake.conf &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    sed -i <span class=\"string\">&#x27;21c QMAKE_OBJCOPY     = loongarch64-linux-gnu-objcopy&#x27;</span> /opt/qt-everywhere-src-5.12.12/qtbase/mkspecs/linux-loongarch64-gnu-g++/qmake.conf &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    sed -i <span class=\"string\">&#x27;22c QMAKE_NM          = loongarch64-linux-gnu-nm -P&#x27;</span> /opt/qt-everywhere-src-5.12.12/qtbase/mkspecs/linux-loongarch64-gnu-g++/qmake.conf &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    sed -i <span class=\"string\">&#x27;23c QMAKE_STRIP       = loongarch64-linux-gnu-strip&#x27;</span> /opt/qt-everywhere-src-5.12.12/qtbase/mkspecs/linux-loongarch64-gnu-g++/qmake.conf &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    /opt/qt-everywhere-src-5.12.12/configure -prefix /qt5.12.12 \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    -opensource \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    -confirm-license \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    -release \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    -xplatform linux-loongarch64-gnu-g++ \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    -make libs \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    -make tools \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    -nomake tests \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    -nomake examples \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    -qt-zlib \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    -xcb-xlib -xcb \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    -opengl desktop \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    -sysroot /sysroot &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"language-bash\">    make -j64 &amp;&amp; make -j32 install</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"language-bash\"> <span class=\"built_in\">rm</span> -rf /opt/qt-everywhere-src-5.12.12</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">ENV</span> LLVM_INSTALL_DIR=/opt/loongaarch64-llvm</span><br><span class=\"line\"><span class=\"keyword\">ENV</span> QTC_ENABLE_CLANG_LIBTOOLING=true</span><br><span class=\"line\"><span class=\"keyword\">ENV</span> PATH=$PATH:/sysroot/qt5.<span class=\"number\">12.12</span>/bin</span><br></pre></td></tr></table></figure>","feature":true,"text":"Docker 是一个开源的容器化平台，用于轻松打包、发布和运行应用程序。通过 Docker，开发者可以将应用程序及其依赖项打包到一个称为镜像的标准化单元中，然后在任何支持 Docker 的环境中部署这些镜像为容器。...","permalink":"/post/Docker","photos":[],"count_time":{"symbolsCount":"23k","symbolsTime":"21 mins."},"categories":[],"tags":[{"name":"Docker","slug":"Docker","count":1,"path":"api/tags/Docker.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%89%E5%A4%A7%E6%A0%B8%E5%BF%83\"><span class=\"toc-text\">三大核心</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">常用命令</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">安装</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#ubuntu\"><span class=\"toc-text\">ubuntu</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#centos\"><span class=\"toc-text\">centos</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%88%87%E6%8D%A2%E5%9B%BD%E5%86%85%E6%BA%90\"><span class=\"toc-text\">切换国内源</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%B9%E5%99%A8%E4%BA%92%E8%81%94\"><span class=\"toc-text\">容器互联</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%9F%A5%E7%9C%8B%E7%BD%91%E7%BB%9C\"><span class=\"toc-text\">查看网络</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA%E7%BD%91%E7%BB%9C\"><span class=\"toc-text\">创建网络</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#PHP-%E5%BC%80%E5%8F%91%E5%A5%97%E4%BB%B6\"><span class=\"toc-text\">PHP 开发套件</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#PHP\"><span class=\"toc-text\">PHP</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E6%8B%89%E5%8F%96%E9%95%9C%E5%83%8F\"><span class=\"toc-text\">拉取镜像</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA%E5%AE%B9%E5%99%A8\"><span class=\"toc-text\">创建容器</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">基本配置</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#MySQL\"><span class=\"toc-text\">MySQL</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E6%8B%89%E5%8F%96%E9%95%9C%E5%83%8F-1\"><span class=\"toc-text\">拉取镜像</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA%E5%AE%B9%E5%99%A8-1\"><span class=\"toc-text\">创建容器</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE-1\"><span class=\"toc-text\">基本配置</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Nginx\"><span class=\"toc-text\">Nginx</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E6%8B%89%E5%8F%96%E9%95%9C%E5%83%8F-2\"><span class=\"toc-text\">拉取镜像</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA%E5%AE%B9%E5%99%A8-2\"><span class=\"toc-text\">创建容器</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE-2\"><span class=\"toc-text\">基本配置</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Redis\"><span class=\"toc-text\">Redis</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E6%8B%89%E5%8F%96%E9%95%9C%E5%83%8F-3\"><span class=\"toc-text\">拉取镜像</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA%E5%AE%B9%E5%99%A8-3\"><span class=\"toc-text\">创建容器</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Memcached\"><span class=\"toc-text\">Memcached</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E6%8B%89%E5%8F%96%E9%95%9C%E5%83%8F-4\"><span class=\"toc-text\">拉取镜像</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA%E5%AE%B9%E5%99%A8-4\"><span class=\"toc-text\">创建容器</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Dockerfile\"><span class=\"toc-text\">Dockerfile</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4-1\"><span class=\"toc-text\">常用命令</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Qt-%E6%88%90%E5%93%81-Dockerfile\"><span class=\"toc-text\">Qt 成品 Dockerfile</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#x86-%E4%BA%A4%E5%8F%89-FTD2000%EF%BC%88ARM64%EF%BC%89\"><span class=\"toc-text\">x86 交叉 FTD2000（ARM64）</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#x86-%E4%BA%A4%E5%8F%89-%E9%BE%99%E8%8A%AF3A4000%EF%BC%88mips64%EF%BC%89\"><span class=\"toc-text\">x86 交叉 龙芯3A4000（mips64）</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#x86-%E4%BA%A4%E5%8F%89-%E9%BE%99%E8%8A%AF3A5000%EF%BC%88LoongArch64%EF%BC%89\"><span class=\"toc-text\">x86 交叉 龙芯3A5000（LoongArch64）</span></a></li></ol></li></ol>","author":{"name":"哪吒","slug":"blog-author","avatar":"https://pic.imgdb.cn/item/65ba193b871b83018a65323c.jpg","link":"/","description":"人心中的成见就像一座大山，任你怎么努力也休想搬动。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"Compoer","uid":"709b09d4ae43a807a27c1aa5f06ca26b","slug":"Compoer","date":"2024-02-22T10:58:00.000Z","updated":"2024-02-26T07:46:36.785Z","comments":true,"path":"api/articles/Compoer.json","keywords":null,"cover":[],"text":"Composer 作为目前 PHP 包依赖管理的最佳工具，值得每一位 PHP 开发人员掌握。...","permalink":"/post/Compoer","photos":[],"count_time":{"symbolsCount":"2.9k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"PHP","slug":"PHP","count":1,"path":"api/tags/PHP.json"}],"author":{"name":"哪吒","slug":"blog-author","avatar":"https://pic.imgdb.cn/item/65ba193b871b83018a65323c.jpg","link":"/","description":"人心中的成见就像一座大山，任你怎么努力也休想搬动。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"会话技术","uid":"425d803af0b4bf31b2b7e015a65ed6f3","slug":"会话技术","date":"2024-02-22T05:56:20.000Z","updated":"2024-02-26T07:46:39.530Z","comments":true,"path":"api/articles/会话技术.json","keywords":null,"cover":[],"text":"Session 是一种服务器端的状态管理机制，用于存储和跟踪用户的会话信息。与 Cookie 不同，Session 数据存储在服务器端，而不是客户端...","permalink":"/post/会话技术","photos":[],"count_time":{"symbolsCount":"2.8k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"网络协议","slug":"网络协议","count":2,"path":"api/tags/网络协议.json"}],"author":{"name":"哪吒","slug":"blog-author","avatar":"https://pic.imgdb.cn/item/65ba193b871b83018a65323c.jpg","link":"/","description":"人心中的成见就像一座大山，任你怎么努力也休想搬动。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}